<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.edupractice.malaria.modules.analyzeDisease.dao.AnalyzeMapper">
    <cache eviction="LRU" flushInterval="100000" size="1024" readOnly="true"/>
    <select id="selectDisease" resultType="String">
        SELECT DISTINCT(disease_name) FROM disease
        WHERE disease_name NOT LIKE '%未分型%'
    </select>

    <resultMap id="analyzeBySexMap" type="com.edupractice.malaria.modules.analyzeDisease.pojo.AnalyzeRe">
        <result column="dataYear" property="year"/>
        <result column="diseaseName" property="disease"/>
        <result column="sex" property="attitude"/>
        <result column="num" property="patientNum"/>
    </resultMap>

    <select id="analyzeBySex" parameterType="String"
            resultMap="analyzeBySexMap">
        SELECT cd.year AS dataYear,di.disease_name AS diseaseName,pi.sex AS sex,COUNT(pi.sex) AS num FROM card cd ,patient
        pi,disease di ,address_geocode ag
        <where>
            AND cd.patient_id=pi.patient_id
            AND cd.disease_id=di.disease_id
            AND pi.address_id = ag.address_id
            AND di.disease_name NOT LIKE '疟疾（未分型）'
            <if test="'default'!=_parameter and ''!=_parameter">
                AND ag.address LIKE '${_parameter}%'
            </if>
        </where>
        GROUP BY pi.sex , di.disease_name,cd.year
        ORDER BY cd.year,di.disease_name,pi.sex;
    </select>


    <resultMap id="analyzeByCareerMap" type="com.edupractice.malaria.modules.analyzeDisease.pojo.AnalyzeRe">
        <result column="year" property="year"/>
        <result column="diseaseName" property="disease"/>
        <result column="career" property="attitude"/>
        <result column="patientNum" property="patientNum"/>
    </resultMap>

    <select id="analyzeByCareer" parameterType="String"
            resultMap="analyzeByCareerMap">
        SELECT
        cd.year AS year,
        di.disease_name AS diseaseName,
        ca.career AS career,
        COUNT(ca.career) AS patientNum
        FROM card cd, disease di, career ca, patient pi, address_geocode ag
        <where>
            AND cd.patient_id = pi.patient_id
            AND pi.address_id = ag.address_id
            AND pi.career_id = ca.career_id
            AND cd.disease_id = di.disease_id
            AND di.disease_name NOT LIKE '疟疾（未分型）'
            AND ca.career NOT LIKE '不详'
            <if test="'default'!=_parameter and ''!=_parameter">
                AND ag.address LIKE '${_parameter}%'
            </if>
        </where>
        GROUP BY ca.career, cd.year, di.disease_name
        ORDER BY cd.year, di.disease_name, ca.career
    </select>

    <resultMap id="analyzeByAgeGroupMap" type="com.edupractice.malaria.modules.analyzeDisease.pojo.AnalyzeRe">
        <result column="year" property="year"/>
        <result column="diseaseName" property="disease"/>
        <result column="ageGroup" property="attitude"/>
        <result column="patientNum" property="patientNum"/>
    </resultMap>

    <select id="analyzeByAgeGroup" parameterType="String"
            resultMap="analyzeByAgeGroupMap">
        SELECT cd.year AS `year`,
        di.disease_name AS diseaseName,
        CASE
        WHEN cd.year-YEAR(pi.birthday)+1 BETWEEN 0 and 9 THEN '0-9'
        WHEN cd.year-YEAR(pi.birthday)+1 BETWEEN 10 and 19 THEN '10-19'
        WHEN cd.year-YEAR(pi.birthday)+1 BETWEEN 20 and 29 THEN '20-29'
        WHEN cd.year-YEAR(pi.birthday)+1 BETWEEN 30 and 39 THEN '30-39'
        WHEN cd.year-YEAR(pi.birthday)+1 BETWEEN 40 and 49 THEN '40-49'
        WHEN cd.year-YEAR(pi.birthday)+1 BETWEEN 50 and 59 THEN '50-59'
        WHEN cd.year-YEAR(pi.birthday)+1 BETWEEN 60 and 69 THEN '60-69'
        WHEN cd.year-YEAR(pi.birthday)+1 BETWEEN 70 and 79 THEN '70-79'
        WHEN cd.year-YEAR(pi.birthday)+1 BETWEEN 80 and 89 THEN '80-89'
        WHEN cd.year-YEAR(pi.birthday)+1 BETWEEN 90 and 99 THEN '90-99'
        ELSE '>99'
        END AS ageGroup ,COUNT(cd.card_id) AS patientNum
        FROM card cd, patient pi, disease di, address_geocode ag
        <where>
            AND cd.patient_id = pi.patient_id
            AND di.disease_id = cd.disease_id
            AND pi.address_id = ag.address_id
            AND di.disease_name NOT LIKE '疟疾（未分型）'
            <if test="'default'!=_parameter and ''!=_parameter">
                AND ag.address LIKE '${_parameter}%'
            </if>
        </where>
        GROUP BY
        CASE
        WHEN cd.year-YEAR(pi.birthday)+1 BETWEEN 0 and 9 THEN '0-9'
        WHEN cd.year-YEAR(pi.birthday)+1 BETWEEN 10 and 19 THEN '10-19'
        WHEN cd.year-YEAR(pi.birthday)+1 BETWEEN 20 and 29 THEN '20-29'
        WHEN cd.year-YEAR(pi.birthday)+1 BETWEEN 30 and 39 THEN '30-39'
        WHEN cd.year-YEAR(pi.birthday)+1 BETWEEN 40 and 49 THEN '40-49'
        WHEN cd.year-YEAR(pi.birthday)+1 BETWEEN 50 and 59 THEN '50-59'
        WHEN cd.year-YEAR(pi.birthday)+1 BETWEEN 60 and 69 THEN '60-69'
        WHEN cd.year-YEAR(pi.birthday)+1 BETWEEN 70 and 79 THEN '70-79'
        WHEN cd.year-YEAR(pi.birthday)+1 BETWEEN 80 and 89 THEN '80-89'
        WHEN cd.year-YEAR(pi.birthday)+1 BETWEEN 90 and 99 THEN '90-99'
        ELSE '>99'
        END,cd.year, di.disease_name
        ORDER BY cd.year, di.disease_name, ageGroup;
    </select>
</mapper>